{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\aadar\\\\My Projects\\\\LoginToDoApp\\\\HomeScreen.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SavedNote from \"./components/SavedNote\";\nimport WelcomeUser from \"./components/WelcomeUser\";\nimport AddNoteButton from \"./components/AddNoteButton\";\nimport Tasks from \"./tasks.json\";\n\nvar HomeScreen = function (_Component) {\n  _inherits(HomeScreen, _Component);\n\n  var _super = _createSuper(HomeScreen);\n\n  function HomeScreen() {\n    var _this;\n\n    _classCallCheck(this, HomeScreen);\n\n    _this = _super.call(this);\n\n    _this.add_newtask = function () {\n      _this.setState({\n        'count': _this.state.count + 0.01\n      });\n\n      Tasks['id1'].push({\n        \"key\": _this.state.count,\n        \"content\": \"\"\n      });\n    };\n\n    _this.state = {\n      count: 0\n    };\n    return _this;\n  }\n\n  _createClass(HomeScreen, [{\n    key: \"render\",\n    value: function render() {\n      var id = 'id1';\n      var mytask = Tasks[id];\n      return React.createElement(KeyboardAvoidingView, {\n        style: styles.keyboardavoid,\n        behavior: Platform.OS == \"ios\" ? \"padding\" : \"height\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.firstcontainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: styles.userheader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }\n      }, React.createElement(WelcomeUser, {\n        name: this.props.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }\n      })), React.createElement(View, {\n        style: styles.flatlistcontainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }\n      }, React.createElement(FlatList, {\n        showsVerticalScrollIndicator: false,\n        contentInset: {\n          bottom: 120\n        },\n        data: mytask,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(SavedNote, {\n            text: item.content,\n            keyExtractor: function keyExtractor(item) {\n              return item.index_id.toString();\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 45\n            }\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 29\n        }\n      }))), React.createElement(View, {\n        style: styles.addnotes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }\n      }, React.createElement(AddNoteButton, {\n        onPress: this.add_newtask,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }\n      })));\n    }\n  }]);\n\n  return HomeScreen;\n}(Component);\n\nexport { HomeScreen as default };\nvar styles = StyleSheet.create({\n  keyboardavoid: {\n    flex: 1,\n    marginTop: 10,\n    paddingVertical: 10\n  },\n  firstcontainer: {\n    flex: 1\n  },\n  userheader: {\n    height: 60,\n    backgroundColor: 'steelblue'\n  },\n  flatlistcontainer: {},\n  addnotes: {\n    height: 0,\n    alignItems: 'flex-end',\n    justifyContent: 'flex-end'\n  }\n});","map":{"version":3,"sources":["C:/Users/aadar/My Projects/LoginToDoApp/HomeScreen.js"],"names":["React","Component","SavedNote","WelcomeUser","AddNoteButton","Tasks","HomeScreen","add_newtask","setState","state","count","push","id","mytask","styles","keyboardavoid","Platform","OS","firstcontainer","userheader","props","name","flatlistcontainer","bottom","item","content","index_id","toString","addnotes","StyleSheet","create","flex","marginTop","paddingVertical","height","backgroundColor","alignItems","justifyContent"],"mappings":"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","sourcesContent":["//App.js => HomeScreen.js\r\n\r\n/*This is an after login Component */\r\n\r\n/* importing required modules */\r\nimport React, {Component} from 'react'\r\nimport {View, FlatList, Platform, KeyboardAvoidingView, StyleSheet} from 'react-native'\r\n\r\n//Importing functions\r\nimport SavedNote from './components/SavedNote'    //Function resposible for maintaining notes (editing, deleting, checking)\r\nimport WelcomeUser from './components/WelcomeUser'  //Header for logged in user [View Profile] - incomplete, [settings] - incomplete\r\nimport AddNoteButton from './components/AddNoteButton'  //Button to add notes\r\n\r\n//imprting list of tasks\r\nimport Tasks from './tasks.json'\r\n\r\n\r\n /*This is the Home Screen Component - accessible after user inputs correct id and password*/\r\n\r\n //Starts export\r\nexport default class HomeScreen extends Component{\r\n    \r\n    //Initializing initial states of the system\r\n    constructor() {\r\n        super()\r\n        this.state={\r\n            count:0, //Initial count of tasks in task.json\r\n        }\r\n    }\r\n\r\n    // This function adds a new task with key value (count) and empty content value\r\n    add_newtask = () => {\r\n        this.setState({\r\n            'count':this.state.count + 0.01  //Each time a task is run, count increments by 1\r\n        })\r\n\r\n        Tasks['id1'].push({\"key\":this.state.count, \"content\":\"\"});   // Pushing new task to list of Tasks\r\n    }    \r\n\r\n    /*Beginning of render function*/\r\n    render () {\r\n\r\n        const id = 'id1'\r\n        const mytask = Tasks[id]   //this is an array [{key:'', content:''},{}]\r\n    \r\n        //Starts Main function    \r\n        return(\r\n\r\n                //Avoid Keyboard Overlap on text input field       \r\n            <KeyboardAvoidingView style={styles.keyboardavoid} behavior={Platform.OS == \"ios\" ? \"padding\" : \"height\"}>\r\n\r\n                {/* first Container of children items*/}\r\n                    <View style={styles.firstcontainer}>\r\n\r\n                {/* {child} This Box Contains Welcome User Header => ./components/WelcomeUser.js */}\r\n                        <View style={styles.userheader}>\r\n\r\n                {/* {sub-child}Passing Name of Logged Inuser to the header */}\r\n                            <WelcomeUser name={this.props.name}/>  \r\n                        </View>\r\n\r\n                {/* {child} This gives the list of all tasks in tasks (Tasks variable)\r\n                    this lists is optimised with Flatlist componenet and SavedNotes function => ./component/SavedNote.js\r\n                    included function - [delete notes, edit notes, check notes] */}\r\n                        <View style={styles.flatlistcontainer}>\r\n                            <FlatList showsVerticalScrollIndicator={false}  contentInset= {{bottom: 120}} data={mytask} renderItem={\r\n                                ({item}) => <SavedNote text={item.content} keyExtractor={item => item.index_id.toString()} /> } />\r\n                        </View>\r\n                    </View>\r\n\r\n                {/* Second Container Add notes function container => ./components/AddNoteButton.js  */}                    \r\n                    <View style={styles.addnotes}>\r\n\r\n                {/* Passing function AddNewTask to the button */}\r\n                        <AddNoteButton onPress={this.add_newtask}/>\r\n                    </View>\r\n            </KeyboardAvoidingView>\r\n\r\n        )\r\n        //Main Function Ends Here\r\n    }\r\n    /* End of render function*/\r\n\r\n}\r\n//End of export\r\n\r\n/*Styles (in order of heirarchy)*/\r\nconst styles = StyleSheet.create({\r\n\r\n    //Avoid KeyBoard Overlap\r\n    keyboardavoid: {\r\n        flex:1,\r\n        marginTop:10,\r\n        paddingVertical:10,\r\n    },\r\n\r\n    //first Container to Include children items\r\n    firstcontainer: {\r\n        flex:1,\r\n    },\r\n\r\n    //Header for Logged In Screen\r\n    userheader: {\r\n        height:60,\r\n        backgroundColor:'steelblue'\r\n    },\r\n    flatlistcontainer: {\r\n    },\r\n    addnotes: {\r\n        height:0,\r\n        alignItems:'flex-end',\r\n        justifyContent:'flex-end'\r\n    },\r\n})\r\n"]},"metadata":{},"sourceType":"module"}
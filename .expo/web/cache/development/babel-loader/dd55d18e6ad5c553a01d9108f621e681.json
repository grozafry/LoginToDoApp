{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\aadar\\\\My Projects\\\\LoginToDoApp\\\\App.js\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Back_Arrow from \"./assets/240px-Back_Arrow.png\";\nimport Email_Check from \"./assets/240px-Email_Check.png\";\nimport Show_Pass from \"./assets/240px-Show_Pass.png\";\nimport Hide_Pass from \"./assets/240px-Hide_Pass.png\";\nimport Verified_Email from \"./assets/Verified_Email.png\";\nimport Home_Screen from \"./Main\";\nimport users from \"./users.json\";\nexport default function experimental_login() {\n  var messages = [\"seems you're not registered with us!\", \"Please enter an email address first!\", \"Too Many Failed attempts, Please Try Again in \"];\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      count = _useState2[0],\n      setCount = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      result = _useState4[0],\n      setResult = _useState4[1];\n\n  var _useState5 = useState(Email_Check),\n      _useState6 = _slicedToArray(_useState5, 2),\n      emailCheckResult = _useState6[0],\n      setEmailCheckResult = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      disableEmail = _useState8[0],\n      setDisableEmail = _useState8[1];\n\n  var _useState9 = useState(true),\n      _useState10 = _slicedToArray(_useState9, 2),\n      emailCheck = _useState10[0],\n      setEmailCheck = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      passwordView = _useState12[0],\n      setPasswordView = _useState12[1];\n\n  var _useState13 = useState('none'),\n      _useState14 = _slicedToArray(_useState13, 2),\n      passBoxVisibility = _useState14[0],\n      setPassBoxVisibility = _useState14[1];\n\n  var _useState15 = useState('none'),\n      _useState16 = _slicedToArray(_useState15, 2),\n      registeredEmail = _useState16[0],\n      setRegisteredEmail = _useState16[1];\n\n  var _useState17 = useState(Hide_Pass),\n      _useState18 = _slicedToArray(_useState17, 2),\n      viewPassword = _useState18[0],\n      setViewPassword = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      goHome = _useState20[0],\n      setGoHome = _useState20[1];\n\n  var _useState21 = useState(''),\n      _useState22 = _slicedToArray(_useState21, 2),\n      home = _useState22[0],\n      setHome = _useState22[1];\n\n  var pass = '';\n\n  var _useState23 = useState(''),\n      _useState24 = _slicedToArray(_useState23, 2),\n      emailEntered = _useState24[0],\n      setEmailEntered = _useState24[1];\n\n  var _useState25 = useState(''),\n      _useState26 = _slicedToArray(_useState25, 2),\n      passwordEntered = _useState26[0],\n      setPasswordEntered = _useState26[1];\n\n  var _useState27 = useState(5),\n      _useState28 = _slicedToArray(_useState27, 2),\n      b = _useState28[0],\n      setB = _useState28[1];\n\n  function email_check() {\n    if (emailEntered != '') {\n      if (users[emailEntered]) {\n        for (x in users) {\n          if (x == emailEntered) {\n            setHome(x);\n          }\n        }\n\n        setRegisteredEmail('none');\n        setPassBoxVisibility('flex');\n        setEmailCheckResult(Verified_Email);\n        setEmailCheck(false);\n        setCount(0);\n        setB(5);\n      } else {\n        setRegisteredEmail('flex');\n        setCount(count + 1);\n        setResult(messages[0]);\n        setPassBoxVisibility('none');\n        setEmailCheckResult(Email_Check);\n      }\n    } else {\n      setResult(messages[1]);\n      setCount(count + 1);\n      setRegisteredEmail('flex');\n      setEmailCheckResult(Email_Check);\n    }\n\n    if (count > 2) {\n      setEmailCheck(false);\n      setDisableEmail(true);\n      var timeout_1 = setTimeout(setEmailCheck, b * 1000, true);\n      var timeout_2 = setTimeout(setDisableEmail, b * 1000, false);\n      var timeout_3 = setTimeout(setResult, b * 1000, '');\n      setB(b * 2);\n      var timeout_4 = setTimeout(setCount, b * 1000, 0);\n      setResult(messages[2] + b + '\\xa0seconds!');\n    }\n  }\n\n  function login_attempt() {\n    if (users[emailEntered] === passwordEntered) {\n      setGoHome(true);\n    } else {\n      alert('Nope!');\n    }\n  }\n\n  if (goHome) {\n    return React.createElement(View, {\n      style: {\n        flex: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, React.createElement(Home_Screen, {\n      name: home,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  function password_visibility() {\n    if (passwordView) {\n      setPasswordView(false);\n      setViewPassword(Hide_Pass);\n    } else {\n      setPasswordView(true);\n      setViewPassword(Show_Pass);\n    }\n  }\n\n  function reset_fields() {\n    setPasswordEntered('');\n    pass.clear();\n    setPassBoxVisibility('none');\n    setEmailCheckResult(Email_Check);\n    setEmailCheck(true);\n    setResult('');\n  }\n\n  return React.createElement(KeyboardAvoidingView, {\n    style: styles.mainBox,\n    behavior: Platform.OS == \"ios\" ? \"padding\" : \"height\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.headerRegion,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  }, React.createElement(TouchableHighlight, {\n    activeOpacity: 1,\n    underlayColor: \"#0000CD\",\n    style: styles.backNavigation,\n    onPress: function onPress() {\n      return alert('Still Working on this one ðŸ˜¢!');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 25\n    }\n  }, React.createElement(Image, {\n    style: styles.buttonThumbs,\n    source: Back_Arrow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 29\n    }\n  }))), React.createElement(View, {\n    style: styles.bodyBox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: styles.mainLoginBox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: styles.headerLogin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 29\n    }\n  }, \"let's get you signed in!\"), React.createElement(View, {\n    style: styles.emailBox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 29\n    }\n  }, React.createElement(TextInput, {\n    disabled: disableEmail,\n    style: styles.inputEmail,\n    placeholder: 'sample_email@email.com',\n    onChangeText: function onChangeText(emailEntered) {\n      return setEmailEntered(emailEntered);\n    },\n    onChange: reset_fields,\n    defaultValue: emailEntered,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 33\n    }\n  }), React.createElement(TouchableHighlight, {\n    activeOpacity: 1,\n    disabled: !emailCheck,\n    underlayColor: \"#0000CD\",\n    onPress: email_check,\n    style: styles.emailVerify,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 33\n    }\n  }, React.createElement(Image, {\n    style: styles.buttonThumbs,\n    source: emailCheckResult,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 41\n    }\n  }))), React.createElement(Text, {\n    style: {\n      color: 'darkred',\n      fontStyle: 'italic',\n      display: registeredEmail\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 29\n    }\n  }, result), React.createElement(View, {\n    style: {\n      display: passBoxVisibility\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 29\n    }\n  }, React.createElement(View, {\n    style: styles.passwordBox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 33\n    }\n  }, React.createElement(TextInput, {\n    secureTextEntry: !passwordView,\n    style: styles.inputPassword,\n    placeholderTextColor: 'gray',\n    placeholder: 'Input Your Password Here!',\n    onChangeText: function onChangeText(passwordEntered) {\n      return setPasswordEntered(passwordEntered);\n    },\n    defaultValue: passwordEntered,\n    ref: function ref(input) {\n      pass = input;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 37\n    }\n  }), React.createElement(TouchableHighlight, {\n    activeOpacity: 1,\n    underlayColor: '#747474',\n    onPress: password_visibility,\n    style: styles.passowrdView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 37\n    }\n  }, React.createElement(Image, {\n    style: styles.buttonThumbs,\n    source: viewPassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 41\n    }\n  })))), React.createElement(View, {\n    style: {\n      display: passBoxVisibility\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 29\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.submitButton,\n    underlayColor: \"#000\",\n    onPress: login_attempt,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 33\n    }\n  }, React.createElement(Text, {\n    style: styles.submitButtonText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 37\n    }\n  }, \"login\"))), React.createElement(View, {\n    style: styles.signUpBox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 33\n    }\n  }, \"Don't have any account with us yet?\"), React.createElement(TouchableOpacity, {\n    style: styles.signUpButton,\n    onPress: function onPress() {\n      return alert('Still working on this one ðŸ˜¢!');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 33\n    }\n  }, React.createElement(Text, {\n    style: styles.signUpButtonText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 37\n    }\n  }, \"sign up!\"))))), React.createElement(View, {\n    style: styles.footerRegion,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 21\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  mainBox: {\n    flex: 1,\n    backgroundColor: '#C9C9C9'\n  },\n  headerRegion: {\n    flex: 1 / 20,\n    marginTop: 20,\n    paddingVertical: 10,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  backNavigation: {\n    height: 35,\n    width: 35,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 17.5,\n    borderWidth: 0,\n    shadowOffset: {\n      width: 0,\n      height: 0\n    },\n    shadowRadius: 17.5,\n    shadowOpacity: 1\n  },\n  navText: {\n    fontStyle: 'italic',\n    fontSize: 25,\n    paddingHorizontal: 5\n  },\n  bodyBox: {\n    flex: 9.25 / 10,\n    alignItems: \"center\",\n    justifyContent: 'flex-start',\n    marginTop: 50\n  },\n  mainLoginBox: {\n    width: Dimensions.get('window').width * 8 / 9,\n    height: Dimensions.get('window').height * 4 / 9,\n    backgroundColor: '#747474',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderRadius: 10,\n    shadowOffset: {\n      width: -20,\n      height: -20\n    },\n    shadowOpacity: 1,\n    shadowRadius: 80,\n    shadowColor: '#000000',\n    paddingVertical: 10\n  },\n  headerLogin: {\n    textAlign: 'center',\n    textAlignVertical: 'auto',\n    fontStyle: 'italic',\n    color: 'white',\n    fontSize: 20,\n    paddingHorizontal: 15,\n    borderRadius: 3,\n    shadowOffset: {\n      width: -2,\n      height: -2\n    },\n    shadowOpacity: 1,\n    shadowRadius: 8,\n    shadowColor: '#000000'\n  },\n  emailBox: {\n    borderRadius: 4,\n    flexDirection: 'row',\n    width: Dimensions.get('window').width * 7.5 / 9,\n    backgroundColor: 'white',\n    height: 40,\n    shadowOffset: {\n      width: -2,\n      height: -2\n    },\n    shadowOpacity: 1,\n    shadowRadius: 8,\n    shadowColor: '#000000',\n    alignContent: 'center',\n    justifyContent: 'center'\n  },\n  inputEmail: {\n    width: Dimensions.get('window').width * 7.3 / 9 - 35,\n    height: 40,\n    paddingHorizontal: 10,\n    backgroundColor: 'white'\n  },\n  emailVerify: {\n    justifyContent: \"center\",\n    alignItems: 'center',\n    marginTop: 2.5,\n    height: 35,\n    width: 35,\n    borderRadius: 17.5\n  },\n  passwordBox: {\n    flexDirection: 'row',\n    borderRadius: 4,\n    width: Dimensions.get('window').width * 7.5 / 9,\n    height: 40,\n    backgroundColor: '#747474',\n    shadowOffset: {\n      width: -2,\n      height: -2\n    },\n    shadowOpacity: 1,\n    shadowRadius: 8,\n    shadowColor: '#000000'\n  },\n  inputPassword: {\n    paddingHorizontal: 10,\n    backgroundColor: 'black',\n    width: Dimensions.get('window').width * 7.5 / 9 - 45,\n    color: 'white'\n  },\n  passowrdView: {\n    justifyContent: \"center\",\n    alignItems: 'center',\n    width: 45,\n    borderTopRightRadius: 4,\n    borderBottomRightRadius: 4\n  },\n  submitButton: {\n    height: 25,\n    backgroundColor: 'darkblue',\n    alignItems: 'center',\n    justifyContent: 'center',\n    shadowOffset: {\n      width: -2,\n      height: -2\n    },\n    shadowOpacity: 1,\n    shadowRadius: 8,\n    shadowColor: '#000000'\n  },\n  submitButtonText: {\n    fontSize: 16,\n    paddingHorizontal: 10,\n    color: 'white'\n  },\n  signUpBox: {\n    backgroundColor: '#C9C9C9',\n    flexDirection: 'row',\n    paddingHorizontal: 10,\n    height: 30,\n    justifyContent: \"center\",\n    alignItems: 'center',\n    borderRadius: 3,\n    shadowOffset: {\n      width: -2,\n      height: -2\n    },\n    shadowOpacity: 1,\n    shadowRadius: 8,\n    shadowColor: '#000000'\n  },\n  signUpButton: {},\n  signUpButtonText: {\n    color: 'darkred',\n    fontStyle: 'italic',\n    paddingLeft: 10\n  },\n  footerRegion: {\n    flex: 1 / 40,\n    height: 25,\n    backgroundColor: 'steelblue'\n  },\n  buttonThumbs: {\n    height: 35,\n    width: 35\n  }\n});","map":{"version":3,"sources":["C:/Users/aadar/My Projects/LoginToDoApp/App.js"],"names":["React","useState","Back_Arrow","Email_Check","Show_Pass","Hide_Pass","Verified_Email","Home_Screen","users","experimental_login","messages","count","setCount","result","setResult","emailCheckResult","setEmailCheckResult","disableEmail","setDisableEmail","emailCheck","setEmailCheck","passwordView","setPasswordView","passBoxVisibility","setPassBoxVisibility","registeredEmail","setRegisteredEmail","viewPassword","setViewPassword","goHome","setGoHome","home","setHome","pass","emailEntered","setEmailEntered","passwordEntered","setPasswordEntered","b","setB","email_check","x","timeout_1","setTimeout","timeout_2","timeout_3","timeout_4","login_attempt","alert","flex","password_visibility","reset_fields","clear","styles","mainBox","Platform","OS","headerRegion","backNavigation","buttonThumbs","bodyBox","mainLoginBox","headerLogin","emailBox","inputEmail","emailVerify","color","fontStyle","display","passwordBox","inputPassword","input","passowrdView","submitButton","submitButtonText","signUpBox","signUpButton","signUpButtonText","footerRegion","StyleSheet","create","backgroundColor","marginTop","paddingVertical","justifyContent","alignItems","height","width","borderRadius","borderWidth","shadowOffset","shadowRadius","shadowOpacity","navText","fontSize","paddingHorizontal","Dimensions","get","shadowColor","textAlign","textAlignVertical","flexDirection","alignContent","borderTopRightRadius","borderBottomRightRadius","paddingLeft"],"mappings":"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","sourcesContent":["/* importing required modules */\r\nimport React, {useState} from 'react';\r\nimport { Text, View, TextInput, Platform, Image, KeyboardAvoidingView, Dimensions, TouchableOpacity,SafeAreaView, TouchableHighlight, StyleSheet } from 'react-native';\r\n\r\n/*Importing Button Images */\r\nimport Back_Arrow from './assets/240px-Back_Arrow.png';\r\nimport Email_Check from './assets/240px-Email_Check.png';\r\nimport Show_Pass from './assets/240px-Show_Pass.png';\r\nimport Hide_Pass from './assets/240px-Hide_Pass.png';\r\nimport Verified_Email from './assets/Verified_Email.png';\r\nimport Home_Screen from './Main';\r\nimport users from './users.json'\r\n\r\n/*Main Function */\r\nexport default function experimental_login() {\r\n    /*List of Messages */\r\n    var messages = [\"seems you're not registered with us!\", \"Please enter an email address first!\", \"Too Many Failed attempts, Please Try Again in \"]\r\n    \r\n    /*   Unused Variables for future Usage*\r\n    let [goBack, setGoBack] = useState(false);\r\n    let [t, setT] = useState(performance.now()/1000);\r\n    let [signUp, setSignUp] = useState(false);\r\n    */\r\n\r\n    /*List of State Variables*/\r\n    let [count, setCount] = useState(0);     //Counter for unauthorised login attempt\r\n    let [result, setResult] = useState('');    //login attempt messages [if needed]\r\n    let [emailCheckResult, setEmailCheckResult] = useState(Email_Check);    // Image URI source for email check\r\n    let [disableEmail, setDisableEmail] = useState(false);     //disables email inpyut if counter exceeds\r\n    let [emailCheck, setEmailCheck] = useState(true);    // Checks if Email is registered or not\r\n    let [passwordView, setPasswordView] = useState(false);    //set whether to show the password\r\n    let [passBoxVisibility, setPassBoxVisibility] = useState('none');    //enables password box in case email is registered\r\n    let [registeredEmail, setRegisteredEmail] = useState('none');     //Enables visibility of login messages if needed.\r\n    let [viewPassword, setViewPassword] = useState(Hide_Pass);     // Image URI source for Password View\r\n    let [goHome, setGoHome] = useState(false); // Goes to Home Screen if true\r\n    let [home, setHome] = useState('');\r\n\r\n    var pass = '';  //clears exisiting password if email is changed\r\n\r\n\r\n    const [emailEntered, setEmailEntered] = useState('');  //Takes Input for email\r\n    const [passwordEntered, setPasswordEntered] = useState('');   //Takes Input for password\r\n    const [b, setB] = useState(5);\r\n\r\n/* verifying email */\r\n    function email_check() {\r\n        if (emailEntered!='') {\r\n            if (users[emailEntered]){\r\n                for (x in users) {\r\n                    if (x==emailEntered) {\r\n                        setHome(x);\r\n                        // alert(home)\r\n                    }\r\n                }\r\n                setRegisteredEmail('none');\r\n                setPassBoxVisibility('flex');\r\n                setEmailCheckResult(Verified_Email);\r\n                setEmailCheck(false);\r\n                setCount(0);\r\n                setB(5);\r\n            } else {\r\n                setRegisteredEmail('flex');\r\n                setCount(count + 1);\r\n                setResult(messages[0])\r\n                setPassBoxVisibility('none');\r\n                setEmailCheckResult(Email_Check);\r\n            }\r\n        } else {\r\n            setResult(messages[1]);\r\n            setCount(count + 1);\r\n            setRegisteredEmail('flex');\r\n            setEmailCheckResult(Email_Check);\r\n        }\r\n\r\n        if (count > 2) {\r\n            setEmailCheck(false);\r\n            setDisableEmail(true);\r\n            var timeout_1 = setTimeout(setEmailCheck, b*1000, true);\r\n            var timeout_2 = setTimeout(setDisableEmail, b*1000, false);\r\n            var timeout_3 = setTimeout(setResult, b*1000, '');\r\n            setB(b*2);\r\n            var timeout_4 = setTimeout(setCount, b*1000, 0);\r\n            setResult(messages[2] + b + '\\xa0seconds!');        \r\n        }\r\n    }\r\n\r\n/*End of Email verification*/\r\n\r\n/* Password Verification */\r\n    function login_attempt() {\r\n        if (users[emailEntered]===passwordEntered) {            \r\n            setGoHome(true);\r\n        } else {    \r\n            alert('Nope!');\r\n        }\r\n    }\r\n/*End of Password Verification */\r\n\r\n/*Sample Home Screen */\r\n    if (goHome) {\r\n        // alert(home)\r\n        return (\r\n            <View style={{flex:1}}>\r\n                <Home_Screen name={home}/>\r\n            </View>\r\n        );\r\n    }\r\n/*End of Home Screen function */\r\n\r\n/* Password visibility setting */\r\n    function password_visibility() {\r\n        if (passwordView) {\r\n            setPasswordView(false);\r\n            setViewPassword(Hide_Pass);\r\n        } else {\r\n            setPasswordView(true);\r\n            setViewPassword(Show_Pass);\r\n        }\r\n    }\r\n\r\n/* reset passoword fields and hide password box (Invoked when email is changed)*/    \r\n    function reset_fields() {\r\n        setPasswordEntered('');\r\n        pass.clear();\r\n        setPassBoxVisibility('none');\r\n        setEmailCheckResult(Email_Check);\r\n        setEmailCheck(true);\r\n        setResult('');\r\n    }\r\n\r\n/*Main Return function */    \r\n    return (\r\n        //Main Container\r\n        // <View >\r\n            <KeyboardAvoidingView style={styles.mainBox} behavior={Platform.OS == \"ios\" ? \"padding\" : \"height\"}>\r\n\r\n                    {/*Header region (contains back button)*/}\r\n                    <View style={styles.headerRegion}>\r\n                    \r\n                    {/*Button to go back to unsigned home screen []*/}\r\n                        <TouchableHighlight activeOpacity={1} underlayColor=\"#0000CD\" style={styles.backNavigation} onPress={()=> alert('Still Working on this one ðŸ˜¢!')}>\r\n                            <Image style={styles.buttonThumbs} source={Back_Arrow} />\r\n                        </TouchableHighlight>            \r\n                    </View>\r\n\r\n                    {/*Body (Contain all login elements)*/}\r\n                    <View style={styles.bodyBox}>\r\n                        <View style={styles.mainLoginBox}>\r\n\r\n                    {/*Heading Text*/}\r\n                            <Text style={styles.headerLogin}>let's get you signed in!</Text>\r\n\r\n                    {/*Email Main Box*/}\r\n                            <View style={styles.emailBox}> \r\n\r\n                    {/*Email Input (can be disabled)*/}\r\n                                <TextInput disabled={disableEmail} style={styles.inputEmail} placeholder={'sample_email@email.com'}\r\n                                        onChangeText={emailEntered=>setEmailEntered(emailEntered)}\r\n                                        onChange={reset_fields}\r\n                                        defaultValue={emailEntered} />\r\n\r\n                    {/*Email check button [email_check] (with disable and variable image uri)*/}\r\n                                <TouchableHighlight activeOpacity={1}\r\n                                    disabled={!emailCheck}\r\n                                    underlayColor=\"#0000CD\" onPress={email_check} style={styles.emailVerify}>\r\n                                        <Image style={styles.buttonThumbs} source={emailCheckResult} />\r\n                                </TouchableHighlight>\r\n                            </View>\r\n\r\n                    {/*Text returning error messages in email verification*/}\r\n                            <Text style={{color:'darkred', fontStyle:'italic', display:registeredEmail}}>{result}</Text>\r\n                    \r\n                    {/*(Container used for hiding passwordBox until email is verified)*/}\r\n                            <View style={{display:passBoxVisibility}}>\r\n                    \r\n                    {/*Flexbox for password*/}\r\n                                <View style={styles.passwordBox}>\r\n\r\n                    {/*Password Input Box*/}\r\n                                    <TextInput secureTextEntry={!passwordView} style={styles.inputPassword} placeholderTextColor={'gray'}\r\n                                            placeholder={'Input Your Password Here!'}\r\n                                            onChangeText={passwordEntered => setPasswordEntered(passwordEntered)}\r\n                                            defaultValue={passwordEntered}\r\n                                            ref={input => { pass = input }}\r\n                                            />\r\n\r\n                    {/*Button for viewing password [password_visibility] (has a variable image uri)*/}\r\n                                    <TouchableHighlight activeOpacity={1} underlayColor={'#747474'} onPress={password_visibility} style={styles.passowrdView}>\r\n                                        <Image style={styles.buttonThumbs} source={viewPassword} />\r\n                                    </TouchableHighlight>\r\n                                </View>\r\n                            </View>\r\n\r\n                    {/*Button to submit password [login_attempt] (shares the visibility criteria same as password box)*/}\r\n                            <View style={{display:passBoxVisibility}}>\r\n                                <TouchableOpacity style={styles.submitButton} underlayColor=\"#000\" onPress={login_attempt}>\r\n                                    <Text style={styles.submitButtonText}>login</Text>                            \r\n                                </TouchableOpacity>\r\n                            </View>\r\n                    {/*Button for signing up if the user is not registered and is interested []*/}\r\n                            <View style={styles.signUpBox}>\r\n                                <Text>Don't have any account with us yet?</Text>\r\n                                <TouchableOpacity style={styles.signUpButton} onPress={() => alert('Still working on this one ðŸ˜¢!')}>\r\n                                    <Text style={styles.signUpButtonText}>sign up!</Text>                                \r\n                                </TouchableOpacity>\r\n                            </View>\r\n\r\n                        </View>\r\n                    </View>\r\n                    {/*End of Main Login Box*/}\r\n                    \r\n                    {/*Footer Region(isn't developed yet)*/} \r\n                    <View style={styles.footerRegion}>\r\n                    </View>\r\n                    {/*End of footer region*/}\r\n                \r\n            </KeyboardAvoidingView>\r\n        // </View>\r\n        //End of Main Container\r\n    );\r\n    /*End of Main return function*/\r\n}\r\n//End of Main Function\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n    //full container\r\n\r\n    mainBox:{\r\n        flex:1,\r\n        backgroundColor:'#C9C9C9',\r\n        // marginTop:15,\r\n    },\r\n\r\n    //top bar\r\n\r\n    headerRegion:{\r\n        flex:1/20,\r\n        marginTop:20,\r\n        paddingVertical:10,\r\n        justifyContent:'center',\r\n        alignItems:'center',\r\n    },\r\n\r\n    //Navigate Back\r\n\r\n    backNavigation:{\r\n        height:35,\r\n        width:35,\r\n        justifyContent:'center',\r\n        alignItems:'center',\r\n        borderRadius:17.5,\r\n        borderWidth:0,\r\n        shadowOffset:{width:0, height:0},\r\n        shadowRadius:17.5,\r\n        shadowOpacity:1, \r\n    },\r\n\r\n    //Navtext [if added]\r\n\r\n    navText:{\r\n        fontStyle:'italic',\r\n        fontSize:25,\r\n        paddingHorizontal:5,\r\n    },\r\n\r\n    //main body [contains login box]\r\n\r\n    bodyBox:{\r\n        flex:9.25/10,\r\n        alignItems:\"center\",\r\n        justifyContent:'flex-start',\r\n        marginTop:50,\r\n    },\r\n\r\n    //login box [contains login elements]\r\n\r\n    mainLoginBox: {\r\n        width:Dimensions.get('window').width*8/9,\r\n        height:Dimensions.get('window').height*4/9,\r\n        backgroundColor:'#747474',\r\n        justifyContent:'space-between',\r\n        alignItems:'center',\r\n        borderRadius:10,\r\n        shadowOffset:{width:-20,height:-20},\r\n        shadowOpacity:1,\r\n        shadowRadius:80,\r\n        shadowColor:'#000000',\r\n        paddingVertical:10,\r\n    },\r\n\r\n    //login heading\r\n\r\n    headerLogin:{\r\n        textAlign:'center',\r\n        textAlignVertical:'auto',\r\n        fontStyle:'italic',\r\n        color:'white',\r\n        fontSize:20,\r\n        paddingHorizontal:15,\r\n        borderRadius:3,\r\n        shadowOffset:{width:-2,height:-2},\r\n        shadowOpacity:1,\r\n        shadowRadius:8,\r\n        shadowColor:'#000000',\r\n    },\r\n\r\n    //Email input container main\r\n\r\n    emailBox:{\r\n        borderRadius:4,\r\n        flexDirection:'row',\r\n        width:Dimensions.get('window').width*7.5/9,\r\n        backgroundColor:'white',\r\n        height:40,\r\n        shadowOffset:{width:-2,height:-2},\r\n        shadowOpacity:1,\r\n        shadowRadius:8,\r\n        shadowColor:'#000000',\r\n        alignContent:'center',\r\n        justifyContent:'center'\r\n    },\r\n\r\n    //input for email\r\n\r\n    inputEmail:{\r\n        width:Dimensions.get('window').width*7.3/9 - 35,\r\n        height:40,\r\n        paddingHorizontal:10,\r\n        backgroundColor:'white',\r\n    },\r\n\r\n    //button for email verification\r\n\r\n    emailVerify:{\r\n        justifyContent:\"center\",\r\n        alignItems:'center',\r\n        marginTop:2.5,\r\n        height:35,\r\n        width:35,\r\n        borderRadius:17.5,\r\n    },\r\n\r\n    //Password input container main\r\n\r\n    passwordBox:{\r\n        flexDirection:'row',\r\n        borderRadius:4,\r\n        width:Dimensions.get('window').width*7.5/9,\r\n        height:40,\r\n        backgroundColor:'#747474',\r\n        shadowOffset:{width:-2,height:-2},\r\n        shadowOpacity:1,\r\n        shadowRadius:8,\r\n        shadowColor:'#000000',\r\n    },\r\n\r\n    //input for password\r\n\r\n    inputPassword:{\r\n        paddingHorizontal:10,\r\n        backgroundColor:'black',\r\n        width:Dimensions.get('window').width*7.5/9 - 45,\r\n        color:'white',       \r\n    },\r\n\r\n    //button for password view\r\n\r\n    passowrdView:{\r\n        justifyContent:\"center\",\r\n        alignItems:'center',\r\n        // paddingHorizontal:2,\r\n        width:45,\r\n        // marginRight:2.5,\r\n        borderTopRightRadius:4,\r\n        borderBottomRightRadius:4,\r\n    },\r\n\r\n    //button for credential submission\r\n\r\n    submitButton:{\r\n        height:25,\r\n        backgroundColor:'darkblue',\r\n        alignItems:'center',\r\n        justifyContent:'center',\r\n        shadowOffset:{width:-2,height:-2},\r\n        shadowOpacity:1,\r\n        shadowRadius:8,\r\n        shadowColor:'#000000',\r\n    },\r\n\r\n    //text style for submit button\r\n\r\n    submitButtonText: {\r\n        fontSize:16,\r\n        paddingHorizontal:10,\r\n        color:'white',\r\n    },\r\n\r\n    //Signup container main\r\n\r\n    signUpBox:{\r\n        backgroundColor:'#C9C9C9',\r\n        flexDirection:'row',\r\n        paddingHorizontal:10,\r\n        height:30,\r\n        justifyContent:\"center\",\r\n        alignItems:'center',\r\n        borderRadius:3,\r\n        shadowOffset:{width:-2,height:-2},\r\n        shadowOpacity:1,\r\n        shadowRadius:8,\r\n        shadowColor:'#000000',\r\n    },\r\n\r\n    //styles for signup button\r\n\r\n    signUpButton:{\r\n    },\r\n\r\n    //text style for signup button\r\n\r\n    signUpButtonText:{\r\n        color:'darkred',\r\n        fontStyle:'italic',\r\n        paddingLeft:10,\r\n    },\r\n\r\n    //footer region\r\n\r\n    footerRegion:{\r\n        flex:1/40,\r\n        height:25,\r\n        backgroundColor:'steelblue',    \r\n    },\r\n\r\n    //Thumbnail for buttons\r\n    \r\n    buttonThumbs:{\r\n        height:35,\r\n        width:35,\r\n    },\r\n})\r\n"]},"metadata":{},"sourceType":"module"}
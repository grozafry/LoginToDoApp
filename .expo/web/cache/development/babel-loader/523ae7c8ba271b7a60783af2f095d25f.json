{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\aadar\\\\My Projects\\\\LoginToDoApp\\\\App.js\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Back_Arrow from \"./assets/240px-Back_Arrow.png\";\nimport Email_Check from \"./assets/240px-Email_Check.png\";\nimport Show_Pass from \"./assets/240px-Show_Pass.png\";\nimport Hide_Pass from \"./assets/240px-Hide_Pass.png\";\nimport Verified_Email from \"./assets/Verified_Email.png\";\nimport HomeScreen from \"./HomeScreen\";\nimport Users from \"./users.json\";\nexport default function UserLogin() {\n  var messages = [\"seems you're not registered with us!\", \"Please enter an email address first!\", \"Too Many Failed attempts, Please Try Again in \"];\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      count = _useState2[0],\n      setCount = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      result = _useState4[0],\n      setResult = _useState4[1];\n\n  var _useState5 = useState(Email_Check),\n      _useState6 = _slicedToArray(_useState5, 2),\n      emailCheckResult = _useState6[0],\n      setEmailCheckResult = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      disableEmail = _useState8[0],\n      setDisableEmail = _useState8[1];\n\n  var _useState9 = useState(true),\n      _useState10 = _slicedToArray(_useState9, 2),\n      emailCheck = _useState10[0],\n      setEmailCheck = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      passwordView = _useState12[0],\n      setPasswordView = _useState12[1];\n\n  var _useState13 = useState('none'),\n      _useState14 = _slicedToArray(_useState13, 2),\n      passBoxVisibility = _useState14[0],\n      setPassBoxVisibility = _useState14[1];\n\n  var _useState15 = useState('none'),\n      _useState16 = _slicedToArray(_useState15, 2),\n      registeredEmail = _useState16[0],\n      setRegisteredEmail = _useState16[1];\n\n  var _useState17 = useState(Hide_Pass),\n      _useState18 = _slicedToArray(_useState17, 2),\n      viewPassword = _useState18[0],\n      setViewPassword = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      goHome = _useState20[0],\n      setGoHome = _useState20[1];\n\n  var _useState21 = useState(''),\n      _useState22 = _slicedToArray(_useState21, 2),\n      userid = _useState22[0],\n      setUserId = _useState22[1];\n\n  var pass = '';\n  var x;\n\n  var _useState23 = useState(''),\n      _useState24 = _slicedToArray(_useState23, 2),\n      emailEntered = _useState24[0],\n      setEmailEntered = _useState24[1];\n\n  var _useState25 = useState(''),\n      _useState26 = _slicedToArray(_useState25, 2),\n      passwordEntered = _useState26[0],\n      setPasswordEntered = _useState26[1];\n\n  var _useState27 = useState(5),\n      _useState28 = _slicedToArray(_useState27, 2),\n      b = _useState28[0],\n      setB = _useState28[1];\n\n  function email_check() {\n    var z = 0;\n\n    if (emailEntered != '') {\n      for (x in Users) {\n        if (Users[x].id == emailEntered) {\n          setUserId([x]);\n          setRegisteredEmail('none');\n          setPassBoxVisibility('flex');\n          setEmailCheckResult(Verified_Email);\n          setEmailCheck(false);\n          setCount(0);\n          setB(5);\n          z = 1;\n        }\n      }\n\n      if (z == 0) {\n        setRegisteredEmail('flex');\n        setCount(count + 1);\n        setResult(messages[0]);\n        setPassBoxVisibility('none');\n        setEmailCheckResult(Email_Check);\n      }\n    } else {\n      setResult(messages[1]);\n      setCount(count + 1);\n      setRegisteredEmail('flex');\n      setEmailCheckResult(Email_Check);\n    }\n\n    if (count > 2) {\n      setEmailCheck(false);\n      setDisableEmail(true);\n      var timeout_1 = setTimeout(setEmailCheck, b * 1000, true);\n      var timeout_2 = setTimeout(setDisableEmail, b * 1000, false);\n      var timeout_3 = setTimeout(setResult, b * 1000, '');\n      setB(b * 2);\n      var timeout_4 = setTimeout(setCount, b * 1000, 0);\n      setResult(messages[2] + b + '\\xa0seconds!');\n    }\n  }\n\n  function login_attempt() {\n    if (passwordEntered == Users[userid].pwd) {\n      setGoHome(true);\n    } else {\n      alert('Nope!');\n    }\n  }\n\n  if (goHome) {\n    return React.createElement(View, {\n      style: {\n        flex: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, React.createElement(HomeScreen, {\n      name: userid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  function password_visibility() {\n    if (passwordView) {\n      setPasswordView(false);\n      setViewPassword(Hide_Pass);\n    } else {\n      setPasswordView(true);\n      setViewPassword(Show_Pass);\n    }\n  }\n\n  function reset_fields() {\n    setPasswordEntered('');\n    pass.clear();\n    setPassBoxVisibility('none');\n    setEmailCheckResult(Email_Check);\n    setEmailCheck(true);\n    setResult('');\n  }\n\n  return React.createElement(KeyboardAvoidingView, {\n    style: styles.mainbox,\n    behavior: Platform.OS == \"ios\" ? \"padding\" : \"height\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.headerregion,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableHighlight, {\n    activeOpacity: 1,\n    underlayColor: \"#0000CD\",\n    style: styles.backnavigation,\n    onPress: function onPress() {\n      return alert('Still Working on this one ðŸ˜¢!');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, React.createElement(Image, {\n    style: styles.buttonthumbs,\n    source: Back_Arrow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 21\n    }\n  }))), React.createElement(View, {\n    style: styles.bodybox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.mainloginbox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.headerlogin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 21\n    }\n  }, \"let's get you signed in!\"), React.createElement(View, {\n    style: styles.emailbox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 21\n    }\n  }, React.createElement(TextInput, {\n    disabled: disableEmail,\n    style: styles.inputemail,\n    placeholder: 'sample_email@email.com',\n    onChangeText: function onChangeText(emailEntered) {\n      return setEmailEntered(emailEntered);\n    },\n    onChange: reset_fields,\n    defaultValue: emailEntered,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 25\n    }\n  }), React.createElement(TouchableHighlight, {\n    activeOpacity: 1,\n    disabled: !emailCheck,\n    underlayColor: \"#0000CD\",\n    onPress: email_check,\n    style: styles.emailverify,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 25\n    }\n  }, React.createElement(Image, {\n    style: styles.buttonthumbs,\n    source: emailCheckResult,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 33\n    }\n  }))), React.createElement(Text, {\n    style: {\n      color: 'darkred',\n      fontStyle: 'italic',\n      display: registeredEmail\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 21\n    }\n  }, result), React.createElement(View, {\n    style: {\n      display: passBoxVisibility\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: styles.passwordbox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 25\n    }\n  }, React.createElement(TextInput, {\n    secureTextEntry: !passwordView,\n    style: styles.inputpassword,\n    placeholderTextColor: 'gray',\n    placeholder: 'Input Your Password Here!',\n    onChangeText: function onChangeText(passwordEntered) {\n      return setPasswordEntered(passwordEntered);\n    },\n    defaultValue: passwordEntered,\n    ref: function ref(input) {\n      pass = input;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 29\n    }\n  }), React.createElement(TouchableHighlight, {\n    activeOpacity: 1,\n    underlayColor: '#747474',\n    onPress: password_visibility,\n    style: styles.passwordview,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 29\n    }\n  }, React.createElement(Image, {\n    style: styles.buttonthumbs,\n    source: viewPassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 33\n    }\n  })))), React.createElement(View, {\n    style: {\n      display: passBoxVisibility\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 21\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.submitbutton,\n    underlayColor: \"#000\",\n    onPress: login_attempt,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: styles.submitbuttontext,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 29\n    }\n  }, \"login\"))), React.createElement(View, {\n    style: styles.signupbox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 25\n    }\n  }, \"Don't have any account with us yet?\"), React.createElement(TouchableOpacity, {\n    style: styles.signupbutton,\n    onPress: function onPress() {\n      return alert('Still working on this one ðŸ˜¢!');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: styles.signupbuttontext,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 29\n    }\n  }, \"sign up!\"))))), React.createElement(View, {\n    style: styles.footerregion,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  mainbox: {\n    flex: 1\n  },\n  headerregion: {\n    flex: 1 / 20,\n    marginTop: 20,\n    paddingVertical: 10,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  backnavigation: {\n    height: 35,\n    width: 35,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 17.5,\n    borderWidth: 0,\n    shadowOpacity: 0.8,\n    shadowRadius: 2,\n    shadowOffset: {\n      height: 0.1\n    }\n  },\n  navtext: {\n    fontStyle: 'italic',\n    fontSize: 25,\n    paddingHorizontal: 5\n  },\n  bodybox: {\n    flex: 9.25 / 10,\n    alignItems: \"center\",\n    justifyContent: 'flex-start',\n    marginTop: 50\n  },\n  mainloginbox: {\n    width: Dimensions.get('window').width * 8 / 9,\n    height: Dimensions.get('window').height * 4 / 9,\n    backgroundColor: '#747474',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderRadius: 10,\n    shadowOpacity: 0.8,\n    shadowRadius: 2,\n    shadowOffset: {\n      height: 0.1\n    },\n    paddingVertical: 10\n  },\n  headerlogin: {\n    textAlign: 'center',\n    textAlignVertical: 'auto',\n    fontStyle: 'italic',\n    color: 'white',\n    fontSize: 20,\n    paddingHorizontal: 15,\n    borderRadius: 3,\n    shadowOpacity: 0.8,\n    shadowRadius: 2,\n    shadowOffset: {\n      height: 0.1\n    }\n  },\n  emailbox: {\n    borderRadius: 4,\n    flexDirection: 'row',\n    width: Dimensions.get('window').width * 7.5 / 9,\n    backgroundColor: 'white',\n    height: 40,\n    shadowOpacity: 0.8,\n    shadowRadius: 2,\n    shadowOffset: {\n      height: 0.1\n    },\n    alignContent: 'center',\n    justifyContent: 'center'\n  },\n  inputemail: {\n    width: Dimensions.get('window').width * 7.3 / 9 - 35,\n    height: 40,\n    paddingHorizontal: 10,\n    backgroundColor: 'white'\n  },\n  emailverify: {\n    justifyContent: \"center\",\n    alignItems: 'center',\n    marginTop: 2.5,\n    height: 35,\n    width: 35,\n    borderRadius: 17.5\n  },\n  passwordbox: {\n    flexDirection: 'row',\n    borderRadius: 4,\n    width: Dimensions.get('window').width * 7.5 / 9,\n    height: 40,\n    backgroundColor: 'gray',\n    shadowOpacity: 0.8,\n    shadowRadius: 2,\n    shadowOffset: {\n      height: 0.1\n    }\n  },\n  inputpassword: {\n    paddingHorizontal: 10,\n    backgroundColor: 'black',\n    width: Dimensions.get('window').width * 7.5 / 9 - 45,\n    color: 'white',\n    borderTopLeftRadius: 4,\n    borderBottomLeftRadius: 4\n  },\n  passwordview: {\n    justifyContent: \"center\",\n    alignItems: 'center',\n    width: 45,\n    borderTopRightRadius: 4,\n    borderBottomRightRadius: 4\n  },\n  submitbutton: {\n    height: 25,\n    backgroundColor: 'darkblue',\n    alignItems: 'center',\n    justifyContent: 'center',\n    shadowOpacity: 0.8,\n    shadowRadius: 2,\n    shadowOffset: {\n      height: 0.1\n    }\n  },\n  submitbuttontext: {\n    fontSize: 16,\n    paddingHorizontal: 10,\n    color: 'white'\n  },\n  signupbox: {\n    backgroundColor: '#C9C9C9',\n    flexDirection: 'row',\n    paddingHorizontal: 10,\n    height: 30,\n    justifyContent: \"center\",\n    alignItems: 'center',\n    borderRadius: 3,\n    shadowOpacity: 0.8,\n    shadowRadius: 2,\n    shadowOffset: {\n      height: 0.1\n    }\n  },\n  signupbutton: {},\n  signupbuttontext: {\n    color: 'darkred',\n    fontStyle: 'italic',\n    paddingLeft: 10\n  },\n  footerregion: {\n    flex: 1 / 40,\n    height: 25,\n    backgroundColor: 'steelblue'\n  },\n  buttonthumbs: {\n    height: 35,\n    width: 35\n  }\n});","map":{"version":3,"sources":["C:/Users/aadar/My Projects/LoginToDoApp/App.js"],"names":["React","useState","Back_Arrow","Email_Check","Show_Pass","Hide_Pass","Verified_Email","HomeScreen","Users","UserLogin","messages","count","setCount","result","setResult","emailCheckResult","setEmailCheckResult","disableEmail","setDisableEmail","emailCheck","setEmailCheck","passwordView","setPasswordView","passBoxVisibility","setPassBoxVisibility","registeredEmail","setRegisteredEmail","viewPassword","setViewPassword","goHome","setGoHome","userid","setUserId","pass","x","emailEntered","setEmailEntered","passwordEntered","setPasswordEntered","b","setB","email_check","z","id","timeout_1","setTimeout","timeout_2","timeout_3","timeout_4","login_attempt","pwd","alert","flex","password_visibility","reset_fields","clear","styles","mainbox","Platform","OS","headerregion","backnavigation","buttonthumbs","bodybox","mainloginbox","headerlogin","emailbox","inputemail","emailverify","color","fontStyle","display","passwordbox","inputpassword","input","passwordview","submitbutton","submitbuttontext","signupbox","signupbutton","signupbuttontext","footerregion","StyleSheet","create","marginTop","paddingVertical","justifyContent","alignItems","height","width","borderRadius","borderWidth","shadowOpacity","shadowRadius","shadowOffset","navtext","fontSize","paddingHorizontal","Dimensions","get","backgroundColor","textAlign","textAlignVertical","flexDirection","alignContent","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","paddingLeft"],"mappings":"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","sourcesContent":["//App.js\r\n\r\n/* This is first screen - Login Screen */\r\n\r\n/* importing required modules */\r\nimport React, {useState} from 'react';\r\nimport { Text, View, TextInput, Platform, Image, KeyboardAvoidingView, Dimensions, TouchableOpacity,SafeAreaView, TouchableHighlight, StyleSheet } from 'react-native';\r\n\r\n/*Importing Button Images */\r\nimport Back_Arrow from './assets/240px-Back_Arrow.png';\r\nimport Email_Check from './assets/240px-Email_Check.png';\r\nimport Show_Pass from './assets/240px-Show_Pass.png';\r\nimport Hide_Pass from './assets/240px-Hide_Pass.png';\r\nimport Verified_Email from './assets/Verified_Email.png';\r\n\r\n/* Importing functions*/\r\nimport HomeScreen from './HomeScreen';\r\n\r\n/* Importing list of users*/\r\nimport Users from './users.json'\r\n\r\n/*Main Function */\r\nexport default function UserLogin() {\r\n\r\n    /*List of Messages */\r\n    var messages = [\"seems you're not registered with us!\", \"Please enter an email address first!\", \"Too Many Failed attempts, Please Try Again in \"]\r\n    \r\n    /*   Unused Variables for future Usage*\r\n    let [goBack, setGoBack] = useState(false);\r\n    let [signUp, setSignUp] = useState(false);\r\n    */\r\n\r\n    /*List of State Variables*/\r\n    let [count, setCount] = useState(0);     //Counter for unauthorised login attempt\r\n    let [result, setResult] = useState('');    //login attempt messages [if needed]\r\n    let [emailCheckResult, setEmailCheckResult] = useState(Email_Check);    // Image URI source for email check\r\n    let [disableEmail, setDisableEmail] = useState(false);     //disables email inpyut if counter exceeds\r\n    let [emailCheck, setEmailCheck] = useState(true);    // Checks if Email is registered or not\r\n    let [passwordView, setPasswordView] = useState(false);    //set whether to show the password\r\n    let [passBoxVisibility, setPassBoxVisibility] = useState('none');    //enables password box in case email is registered\r\n    let [registeredEmail, setRegisteredEmail] = useState('none');     //Enables visibility of login messages if needed.\r\n    let [viewPassword, setViewPassword] = useState(Hide_Pass);     // Image URI source for Password View\r\n    let [goHome, setGoHome] = useState(false); // Goes to Home Screen if true\r\n    let [userid, setUserId] = useState('');\r\n\r\n    var pass = '';  //clears exisiting password if email is changed\r\n    var x;  //extracts key from JSON\r\n\r\n\r\n    const [emailEntered, setEmailEntered] = useState('');  //Takes Input for email\r\n    const [passwordEntered, setPasswordEntered] = useState('');   //Takes Input for password\r\n    const [b, setB] = useState(5);  //for timer in case of repeated failed attempts\r\n\r\n/* verifying email */\r\n    function email_check() {\r\n        var z = 0;\r\n        if (emailEntered!='') {\r\n            for (x in Users) {\r\n                if (Users[x].id==emailEntered) {\r\n                        setUserId([x]);                \r\n                        setRegisteredEmail('none');\r\n                        setPassBoxVisibility('flex');\r\n                        setEmailCheckResult(Verified_Email);\r\n                        setEmailCheck(false);\r\n                        setCount(0);\r\n                        setB(5);\r\n                        z = 1;\r\n            } }\r\n            if (z==0) {\r\n                setRegisteredEmail('flex');\r\n                setCount(count + 1);\r\n                setResult(messages[0])\r\n                setPassBoxVisibility('none');\r\n                setEmailCheckResult(Email_Check);\r\n            }\r\n        } else {\r\n            setResult(messages[1]);\r\n            setCount(count + 1);\r\n            setRegisteredEmail('flex');\r\n            setEmailCheckResult(Email_Check);\r\n        }\r\n\r\n        if (count > 2) {\r\n            setEmailCheck(false);\r\n            setDisableEmail(true);\r\n            var timeout_1 = setTimeout(setEmailCheck, b*1000, true);\r\n            var timeout_2 = setTimeout(setDisableEmail, b*1000, false);\r\n            var timeout_3 = setTimeout(setResult, b*1000, '');\r\n            setB(b*2);\r\n            var timeout_4 = setTimeout(setCount, b*1000, 0);\r\n            setResult(messages[2] + b + '\\xa0seconds!');        \r\n        }\r\n    }\r\n\r\n/*End of Email verification*/\r\n\r\n/* Password Verification */\r\n    function login_attempt() {\r\n        // alert(userid)\r\n        if (passwordEntered==Users[userid].pwd) {            \r\n            setGoHome(true);\r\n        } else {    \r\n            alert('Nope!');\r\n        }\r\n    }\r\n/*End of Password Verification */\r\n\r\n/*Sample Home Screen */\r\n    if (goHome) {\r\n        // alert(userid)\r\n        return (\r\n            <View style={{flex:1}}>\r\n                <HomeScreen name={userid}/>\r\n            </View>\r\n        );\r\n    }\r\n/*End of Home Screen function */\r\n\r\n/* Password visibility setting */\r\n    function password_visibility() {\r\n        if (passwordView) {\r\n            setPasswordView(false);\r\n            setViewPassword(Hide_Pass);\r\n        } else {\r\n            setPasswordView(true);\r\n            setViewPassword(Show_Pass);\r\n        }\r\n    }\r\n\r\n/* reset passoword fields and hide password box (Invoked when email is changed)*/    \r\n    function reset_fields() {\r\n        setPasswordEntered('');\r\n        pass.clear();\r\n        setPassBoxVisibility('none');\r\n        setEmailCheckResult(Email_Check);\r\n        setEmailCheck(true);\r\n        setResult('');\r\n    }\r\n\r\n/*Main Return function */    \r\n    return (\r\n        //Main Container\r\n        <KeyboardAvoidingView style={styles.mainbox} behavior={Platform.OS == \"ios\" ? \"padding\" : \"height\"}>\r\n\r\n                {/*Header region (contains back button)*/}\r\n            <View style={styles.headerregion}>\r\n            \r\n            {/*Button to go back to unsigned home screen []*/}\r\n                <TouchableHighlight activeOpacity={1} underlayColor=\"#0000CD\" style={styles.backnavigation} onPress={()=> alert('Still Working on this one ðŸ˜¢!')}>\r\n                    <Image style={styles.buttonthumbs} source={Back_Arrow} />\r\n                </TouchableHighlight>            \r\n            </View>\r\n\r\n            {/*Body (Contain all login elements)*/}\r\n            <View style={styles.bodybox}>\r\n                <View style={styles.mainloginbox}>\r\n\r\n            {/*Heading Text*/}\r\n                    <Text style={styles.headerlogin}>let's get you signed in!</Text>\r\n\r\n            {/*Email Main Box*/}\r\n                    <View style={styles.emailbox}> \r\n\r\n            {/*Email Input (can be disabled)*/}\r\n                        <TextInput disabled={disableEmail} style={styles.inputemail} placeholder={'sample_email@email.com'}\r\n                                onChangeText={emailEntered=>setEmailEntered(emailEntered)}\r\n                                onChange={reset_fields}\r\n                                defaultValue={emailEntered} />\r\n\r\n            {/*Email check button [email_check] (with disable and variable image uri)*/}\r\n                        <TouchableHighlight activeOpacity={1}\r\n                            disabled={!emailCheck}\r\n                            underlayColor=\"#0000CD\" onPress={email_check} style={styles.emailverify}>\r\n                                <Image style={styles.buttonthumbs} source={emailCheckResult} />\r\n                        </TouchableHighlight>\r\n                    </View>\r\n\r\n            {/*Text returning error messages in email verification*/}\r\n                    <Text style={{color:'darkred', fontStyle:'italic', display:registeredEmail}}>{result}</Text>\r\n            \r\n            {/*(Container used for hiding passwordBox until email is verified)*/}\r\n                    <View style={{display:passBoxVisibility}}>\r\n            \r\n            {/*Flexbox for password*/}\r\n                        <View style={styles.passwordbox}>\r\n\r\n            {/*Password Input Box*/}\r\n                            <TextInput secureTextEntry={!passwordView} style={styles.inputpassword} placeholderTextColor={'gray'}\r\n                                    placeholder={'Input Your Password Here!'}\r\n                                    onChangeText={passwordEntered => setPasswordEntered(passwordEntered)}\r\n                                    defaultValue={passwordEntered}\r\n                                    ref={input => { pass = input }}\r\n                                    />\r\n\r\n            {/*Button for viewing password [password_visibility] (has a variable image uri)*/}\r\n                            <TouchableHighlight activeOpacity={1} underlayColor={'#747474'} onPress={password_visibility} style={styles.passwordview}>\r\n                                <Image style={styles.buttonthumbs} source={viewPassword} />\r\n                            </TouchableHighlight>\r\n                        </View>\r\n                    </View>\r\n\r\n            {/*Button to submit password [login_attempt] (shares the visibility criteria same as password box)*/}\r\n                    <View style={{display:passBoxVisibility}}>\r\n                        <TouchableOpacity style={styles.submitbutton} underlayColor=\"#000\" onPress={login_attempt}>\r\n                            <Text style={styles.submitbuttontext}>login</Text>                            \r\n                        </TouchableOpacity>\r\n                    </View>\r\n            {/*Button for signing up if the user is not registered and is interested []*/}\r\n                    <View style={styles.signupbox}>\r\n                        <Text>Don't have any account with us yet?</Text>\r\n                        <TouchableOpacity style={styles.signupbutton} onPress={() => alert('Still working on this one ðŸ˜¢!')}>\r\n                            <Text style={styles.signupbuttontext}>sign up!</Text>                                \r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n            {/*End of Main Login Box*/}\r\n            \r\n            {/*Footer Region(isn't developed yet)*/} \r\n            <View style={styles.footerregion}></View>\r\n            {/*End of footer region*/}\r\n        \r\n        </KeyboardAvoidingView>\r\n        //End of Main Container\r\n    );\r\n    /*End of Main return function*/\r\n}\r\n//End of Main Function\r\n\r\n/*Styles (in order of heirarchy)*/\r\nconst styles = StyleSheet.create({\r\n\r\n    //full container\r\n\r\n    mainbox:{\r\n        flex:1,\r\n    },\r\n\r\n    //top bar\r\n\r\n    headerregion:{\r\n        flex:1/20,\r\n        marginTop:20,\r\n        paddingVertical:10,\r\n        justifyContent:'center',\r\n        alignItems:'center',\r\n    },\r\n\r\n    //Navigate Back\r\n\r\n    backnavigation:{\r\n        height:35,\r\n        width:35,\r\n        justifyContent:'center',\r\n        alignItems:'center',\r\n        borderRadius:17.5,\r\n        borderWidth:0,\r\n        shadowOpacity:0.8,\r\n        shadowRadius:2,\r\n        shadowOffset:{height:0.1}, \r\n    },\r\n\r\n    //Navtext [if added]\r\n\r\n    navtext:{\r\n        fontStyle:'italic',\r\n        fontSize:25,\r\n        paddingHorizontal:5,\r\n    },\r\n\r\n    //main body [contains login box]\r\n\r\n    bodybox:{\r\n        flex:9.25/10,\r\n        alignItems:\"center\",\r\n        justifyContent:'flex-start',\r\n        marginTop:50,\r\n    },\r\n\r\n    //login box [contains login elements]\r\n\r\n    mainloginbox: {\r\n        width:Dimensions.get('window').width*8/9,\r\n        height:Dimensions.get('window').height*4/9,\r\n        backgroundColor:'#747474',\r\n        justifyContent:'space-between',\r\n        alignItems:'center',\r\n        borderRadius:10,\r\n        shadowOpacity:0.8,\r\n        shadowRadius:2,\r\n        shadowOffset:{height:0.1},        \r\n        paddingVertical:10,\r\n    },\r\n\r\n    //login heading\r\n\r\n    headerlogin:{\r\n        textAlign:'center',\r\n        textAlignVertical:'auto',\r\n        fontStyle:'italic',\r\n        color:'white',\r\n        fontSize:20,\r\n        paddingHorizontal:15,\r\n        borderRadius:3,\r\n        shadowOpacity:0.8,\r\n        shadowRadius:2,\r\n        shadowOffset:{height:0.1},        \r\n    },\r\n\r\n    //Email input container main\r\n\r\n    emailbox:{\r\n        borderRadius:4,\r\n        flexDirection:'row',\r\n        width:Dimensions.get('window').width*7.5/9,\r\n        backgroundColor:'white',\r\n        height:40,\r\n        shadowOpacity:0.8, \r\n        shadowRadius:2,\r\n        shadowOffset:{height:0.1},       \r\n        alignContent:'center',\r\n        justifyContent:'center'\r\n    },\r\n\r\n    //input for email\r\n\r\n    inputemail:{\r\n        width:Dimensions.get('window').width*7.3/9 - 35,\r\n        height:40,\r\n        paddingHorizontal:10,\r\n        backgroundColor:'white',\r\n    },\r\n\r\n    //button for email verification\r\n\r\n    emailverify:{\r\n        justifyContent:\"center\",\r\n        alignItems:'center',\r\n        marginTop:2.5,\r\n        height:35,\r\n        width:35,\r\n        borderRadius:17.5,\r\n    },\r\n\r\n    //Password input container main\r\n\r\n    passwordbox:{\r\n        flexDirection:'row',\r\n        borderRadius:4,\r\n        width:Dimensions.get('window').width*7.5/9,\r\n        height:40,\r\n        backgroundColor:'gray',\r\n        shadowOpacity:0.8,\r\n        shadowRadius:2,\r\n        shadowOffset:{height:0.1},        \r\n    },\r\n\r\n    //input for password\r\n\r\n    inputpassword:{\r\n        paddingHorizontal:10,\r\n        backgroundColor:'black',\r\n        width:Dimensions.get('window').width*7.5/9 - 45,\r\n        color:'white',\r\n        borderTopLeftRadius:4,\r\n        borderBottomLeftRadius:4,       \r\n    },\r\n\r\n    //button for password view\r\n\r\n    passwordview:{\r\n        justifyContent:\"center\",\r\n        alignItems:'center',\r\n        width:45,\r\n        borderTopRightRadius:4,\r\n        borderBottomRightRadius:4,\r\n    },\r\n\r\n    //button for credential submission\r\n\r\n    submitbutton:{\r\n        height:25,\r\n        backgroundColor:'darkblue',\r\n        alignItems:'center',\r\n        justifyContent:'center',\r\n        shadowOpacity:0.8,\r\n        shadowRadius:2,\r\n        shadowOffset:{height:0.1},\r\n        \r\n    },\r\n\r\n    //text style for submit button\r\n\r\n    submitbuttontext: {\r\n        fontSize:16,\r\n        paddingHorizontal:10,\r\n        color:'white',\r\n    },\r\n\r\n    //Signup container main\r\n\r\n    signupbox:{\r\n        backgroundColor:'#C9C9C9',\r\n        flexDirection:'row',\r\n        paddingHorizontal:10,\r\n        height:30,\r\n        justifyContent:\"center\",\r\n        alignItems:'center',\r\n        borderRadius:3,\r\n        shadowOpacity:0.8,\r\n        shadowRadius:2,\r\n        shadowOffset:{height:0.1},        \r\n    },\r\n\r\n    //styles for signup button\r\n\r\n    signupbutton:{\r\n    },\r\n\r\n    //text style for signup button\r\n\r\n    signupbuttontext:{\r\n        color:'darkred',\r\n        fontStyle:'italic',\r\n        paddingLeft:10,\r\n    },\r\n\r\n    //footer region\r\n\r\n    footerregion:{\r\n        flex:1/40,\r\n        height:25,\r\n        backgroundColor:'steelblue',    \r\n    },\r\n\r\n    //Thumbnail for buttons\r\n    \r\n    buttonthumbs:{\r\n        height:35,\r\n        width:35,\r\n    },\r\n})\r\n"]},"metadata":{},"sourceType":"module"}